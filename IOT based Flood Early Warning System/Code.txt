#define BLYNK_TEMPLATE_ID "TMPL3V_toA18k"
#define BLYNK_TEMPLATE_NAME "Flood Early Warning System"
#define BLYNK_PRINT Serial

#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include <DHT.h>
#include <NewPing.h>

// Blynk auth token and Wi-Fi credentials
char auth[] = "OPEHoEG9nCAekkyM8Vg6n-vtD8uy9e4L";
char ssid[] = "vishwaa";
char pass[] = "vishwaa28";

// Pin definitions
#define TRIG_PIN 15
#define ECHO_PIN 13
#define DHT_PIN 4
#define SOIL_PIN 34
#define WATER_PIN 35
#define BUZZER_PIN 27

// Ultrasonic and DHT setup
#define MAX_DISTANCE 200
NewPing sonar(TRIG_PIN, ECHO_PIN, MAX_DISTANCE);
#define DHTTYPE DHT11  // Changed to DHT11
DHT dht(DHT_PIN, DHTTYPE);

void setup() {
  Serial.begin(115200);
  
  // Start Blynk and DHT sensor
  Blynk.begin(auth, ssid, pass);
  dht.begin();
  delay(2000); // Allow time for DHT22 sensor to stabilize

  // Set up buzzer as output
  pinMode(BUZZER_PIN, OUTPUT);
}

void loop() {
  Blynk.run(); // Run Blynk
  readAndSendSensorData(); // Collect and send sensor data
}

void readAndSendSensorData() {
  // Ultrasonic Sensor for water level
  int distance = sonar.ping_cm();
  Serial.print("Water Level (Ultrasonic): ");
  Serial.println(distance);
  Blynk.virtualWrite(V2, distance); // Send to Blynk
  
  // Check water level threshold
  if (distance > 0 && distance < 20) { // Ensure valid distance and check threshold
    digitalWrite(BUZZER_PIN, HIGH); // Turn on buzzer
  } else {
    digitalWrite(BUZZER_PIN, LOW); // Turn off buzzer
  }

  // Soil Moisture Sensor
  int soilMoisture = analogRead(SOIL_PIN);
  soilMoisture = map(soilMoisture, 0, 4095, 0, 100); // Map to percentage
  Serial.print("Soil Moisture: ");
  Serial.println(soilMoisture);
  Blynk.virtualWrite(V3, soilMoisture);

  // Water Level Sensor
  int waterLevel = analogRead(WATER_PIN);
  waterLevel = map(waterLevel, 0, 4095, 0, 100); // Map to percentage
  Serial.print("Water Sensor Level: ");
  Serial.println(waterLevel);
  Blynk.virtualWrite(V4, waterLevel);

  // DHT22 Temperature & Humidity
  float temp = dht.readTemperature();
  float humidity = dht.readHumidity();
  
  // Check if DHT sensor values are valid
  if (!isnan(temp) && !isnan(humidity)) {
    Serial.print("Temperature: ");
    Serial.print(temp);
    Serial.print(" Â°C, Humidity: ");
    Serial.print(humidity);
    Serial.println(" %");
    Blynk.virtualWrite(V0, temp); // Temperature to Blynk
    Blynk.virtualWrite(V1, humidity); // Humidity to Blynk
  } else {
    Serial.println("Failed to read from DHT sensor!");
  }

  delay(2000); // Delay between readings
}
