from machine import Pin, ADC
import network
import time
import dht
from umqtt.simple import MQTTClient

# Blynk credentials
BLYNK_AUTH_TOKEN = "fO5Z_uUhGTAonkMwCZKYsi1J3CPMmce1"
BLYNK_SERVER = "blynk.cloud"
BLYNK_PORT = 1883

# WiFi credentials
SSID = "Airtel_Renukanthan"
PASSWORD = "Renu@0987"

# Pins configuration
DHT_PIN = 4
SOIL_PIN = 32
RAIN_PIN = 5
WATER_PIN = 18

# Initialize sensors
dht_sensor = dht.DHT11(Pin(DHT_PIN))
soil_moisture = ADC(Pin(SOIL_PIN))
soil_moisture.atten(ADC.ATTN_11DB)  # Full range for ESP32 ADC
rain_sensor = Pin(RAIN_PIN, Pin.IN)
water_level_sensor = Pin(WATER_PIN, Pin.IN)

# Connect to WiFi
def connect_wifi():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect(SSID, PASSWORD)
    while not wlan.isconnected():
        print("Connecting to WiFi...")
        time.sleep(1)
    print("Connected to WiFi:", wlan.ifconfig())

# Function to send data to Blynk
def blynk_write(vpin, value):
    topic = f"v1/{BLYNK_AUTH_TOKEN}/update/{vpin}"
    msg = f"[{value}]"
    client.publish(topic, msg)

# Function to read sensors and send data
def read_sensors():
    try:
        # Temperature and Humidity from DHT11
        dht_sensor.measure()
        temperature = dht_sensor.temperature()
        humidity = dht_sensor.humidity()
        blynk_write(0, temperature)
        blynk_write(1, humidity)

        # Soil Moisture Sensor (Convert to percentage)
        soil_value = soil_moisture.read()
        soil_percentage = int((soil_value / 4095) * 100)
        blynk_write(2, soil_percentage)

        # Rain Sensor
        rain_status = rain_sensor.value()
        blynk_write(3, rain_status)

        # Water Level Sensor
        water_level = water_level_sensor.value()
        blynk_write(4, water_level)

        # Print values to the console for debugging
        print(f"Temperature: {temperature}Â°C, Humidity: {humidity}%, Soil Moisture: {soil_percentage}%, Rain: {rain_status}, Water Level: {water_level}")
    
    except Exception as e:
        print("Error reading sensors:", e)

# Setup MQTT client for Blynk
client = MQTTClient("esp32_client", BLYNK_SERVER, port=BLYNK_PORT, keepalive=60)
client.connect()

# Main program
connect_wifi()
while True:
    read_sensors()
    time.sleep(2)  # Delay for sensor readings

